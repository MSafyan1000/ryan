version: 2
jobs:
  build:
    filters:
      branches:
        only:
          - develop
    working_directory: ~/my-app
    docker: # require you to install everything on one container for testing
      - image: circleci/ruby:2.6.3-node-browsers # reuse prod container
        environment:
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          DATABASE_URL: postgres://postgres:password@localhost:5432/tech_cast_test # passowrds in environment variables or from rails config
          RAILS_ENV: test
          REDIS_URL: redis://127.0.0.1:6379 # passowrds in environment variables or from rails config
      - image: circleci/postgres:11-alpine # remove
      - image: circleci/redis:3.2-alpine # remove
    steps:
      - checkout

      # Install dependencies for Ruby Gems
      - restore_cache:
          keys:
            - my-app-bundle-v1-{{ checksum "Gemfile.lock" }}
            - my-app-bundle-v1-

      - run:
          name: Configure Bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler
      - run:
          name: Bundle Install
          command: bundle check || bundle install

      - save_cache:
          key: my-app-bundle-v1-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # Preparing database
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:5432 -timeout 1m

      - run:
          name: Database setup
          command: bin/rails db:create db:schema:load --trace

      # Run rspec in parallel
      - run:
          command: |
            mkdir /tmp/test-results # please remove /tmp
            TESTFILES=$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
            # use Rake
            bundle exec rspec $TESTFILES --profile 10 --format RspecJunitFormatter --out /tmp/test-results/rspec.xml --format progress
      - store_test_results:
          path: /tmp/test-results # please remove /tmp
      - store_artifacts:
          path: /tmp/test-results # please remove /tmp
          destination: test-results

      # Save artifacts
      - store_test_results:
          path: /tmp/test-results # please remove /tmp
      - restore_cache:
          keys:
            - yarn-npm-packages-2-{{ checksum "yarn.lock" }}
            - yarn-npm-packages-2-

      - run:
          name: install js dependencies
          command: |
            cd react-front && yarn install --cache-folder ~/.cache/yarn --production=false

      - save_cache:
          paths:
            - ~/.cache/yarn
          key: yarn-npm-packages-2-{{ checksum "yarn.lock" }}

      - run:
          name: run js tests
          command: |
            cd react-front && yarn test
